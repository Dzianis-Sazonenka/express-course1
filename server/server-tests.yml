name: Server CI

on:
  push:
    branches: [main, master]
    paths:
      - 'server/**'
      - '.github/workflows/server-tests.yml'
  pull_request:
    branches: [main, master]
    paths:
      - 'server/**'
      - '.github/workflows/server-tests.yml'

jobs:
  lint:
    name: Lint
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18.x'
          cache: 'npm'

      - name: Install dependencies
        working-directory: ./server
        run: npm ci

      - name: Run ESLint
        working-directory: ./server
        run: npm run lint

  test:
    name: Test
    needs: lint
    runs-on: ubuntu-latest

    services:
      mongodb:
        image: mongo:6.0
        ports:
          - 27017:27017
        options: >-
          --health-cmd "mongosh --eval 'db.runCommand({ ping: 1 })' localhost:27017/test --quiet"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18.x'
          cache: 'npm'

      - name: Install dependencies
        working-directory: ./server
        run: npm ci

      - name: Create test environment file
        working-directory: ./server
        run: |
          cat > .env.test <<EOL
          NODE_ENV=test
          MONGO_URL=mongodb://localhost:27017/test
          SESSION_SECRET=test-session-secret
          FRONTEND_URL=http://localhost:3000
          EOL

      - name: Run tests
        working-directory: ./server
        run: npm run ci
        env:
          CI: true

      - name: Upload coverage to Codecov
        if: success()
        uses: codecov/codecov-action@v3
        with:
          directory: ./server/coverage
          token: ${{ secrets.CODECOV_TOKEN }}
          fail_ci_if_error: false
        continue-on-error: true
